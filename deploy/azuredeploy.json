{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tsiConsumerGroupName": {
      "type": "string",
      "defaultValue": "tsi",
      "metadata": {
        "description": "The name of the consumer group that the Time Series Insights service will use to read the data from the event hub. NOTE: To avoid resource contention, this consumer group must be dedicated to the Time Series Insights service and not shared with other readers."
      }
    },
    "tsiEnvironmentName": {
      "type": "string",
      "maxLength": 90,
      "metadata": {
        "description": "Name of the environment. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
      }
    },
    "tsiEnvironmentSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "S1",
        "S2"
      ],
      "metadata": {
        "description": "The name of the sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
      }
    },
    "tsiEnvironmentSkuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "The unit capacity of the Sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
      }
    },
    "tsiEnvironmentDataRetentionTime": {
      "type": "string",
      "defaultValue": "P30D",
      "metadata": {
        "description": "The minimum timespan the environmentâ€™s events will be available for query. The value must be specified in the ISO 8601 format, e.g. \"P30D\" for a retention policy of 30 days."
      }
    },
    "tsiEventSourceName": {
      "type": "string",
      "maxLength": 90,
      "defaultValue": "tsieventstream",
      "metadata": {
        "description": "Name of the event source child resource. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
      }
    },
    "tsiEventSourceTimestampPropertyName": {
      "type": "string",
      "maxLength": 90,
      "metadata": {
        "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used."
      }
    },
    "tsiAccessPolicyReaderObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object id of the users or application in AAD that should have Reader access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "iotHubName": {
      "type": "string",
      "maxLength": 90,
      "metadata": {
        "description": "The name of the IoT Hub that Time Series Insights will ingest data from."
      }
    },
    "d2cMessageRetentionInDaysPeriod": {
      "type": "int",
      "minValue": 1,
      "maxValue": 7,
      "defaultValue": 1,
      "metadata": {
        "description": "Retention time in days for device-to-cloud messages."
      }
    },
    "d2cPartitionCount": {
      "type": "int",
      "minValue": 2,
      "defaultValue": 2,
      "metadata": {
        "description": "Number of desired partitions for device-to-cloud event ingestion."
      }
    },
    "c2dMessagesTTLAsIso8601": {
      "type": "string",
      "defaultValue": "PT1H",
      "metadata": {
        "description": "Default TTL in ISO_8601 format for cloud-to-device messages. The value can range from PT1M to PT2D (or any other format as per ISO_8601 standards for duration)."
      }
    },
    "c2dMessagesMaxDeliveryCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 100,
      "defaultValue": 10,
      "metadata": {
        "description": "Maximum delivery count for cloud-to-device messages per-device queues."
      }
    },
    "c2dFeebackMessagesTTLAsIso8601": {
      "type": "string",
      "defaultValue": "PT1H",
      "metadata": {
        "description": "TTL in ISO_8601 format for service-bound feedback messages. The value can range from PT1M to PT2D (or any other format as per ISO_8601 standards for duration)."
      }
    },
    "c2dFeedbackMessagesMaxDeliveryCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 100,
      "defaultValue": 10,
      "metadata": {
        "description": "Maximum delivery count for feedback queue."
      }
    },
    "c2dFeedbackMessagesLockDurationAsIso8601": {
      "type": "string",
      "defaultValue": "PT60S",
      "metadata": {
        "description": "Lock duration in ISO_8601 format for service-bound feedback messages. The value can range from PT5S to PT300S (or any other format as per ISO_8601 standards for duration)."
      }
    },
    "iotHubSkuName": {
      "type": "string",
      "allowedValues": [
        "F1",
        "S1",
        "S2"
      ],
      "defaultValue": "F1",
      "metadata": {
        "description": "One of the supported SKUs: F1, S1 or S2"
      }
    },
    "iotHubCapacityUnits": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "metadata": {
        "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
      }
    },
    "iotHubKeyName": {
      "type": "string",
      "defaultValue": "iothubowner",
      "metadata": {
        "description": "Name of the IoT Hub key."
      }
    }
  },
  "variables": {
    
  },
  "resources": [
    {
      "apiVersion": "2016-02-03",
      "location": "[parameters('location')]",
      "name": "[parameters('iotHubName')]",
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": "[parameters('d2cMessageRetentionInDaysPeriod')]",
            "partitionCount": "[parameters('d2cPartitionCount')]"
          }
        },
        "cloudToDevice": {
          "defaultTtlAsIso8601": "[parameters('c2dMessagesTTLAsIso8601')]",
          "maxDeliveryCount": "[parameters('c2dMessagesMaxDeliveryCount')]",
          "feedback": {
            "maxDeliveryCount": "[parameters('c2dFeedbackMessagesMaxDeliveryCount')]",
            "ttlAsIso8601": "[parameters('c2dFeebackMessagesTTLAsIso8601')]",
            "lockDurationAsIso8601": "[parameters('c2dFeedbackMessagesLockDurationAsIso8601')]"
          }
        },
        "location": "[parameters('location')]"
      },
      "sku": {
        "name": "[parameters('iotHubSkuName')]",
        "capacity": "[parameters('iotHubCapacityUnits')]"
      },
      "type": "Microsoft.Devices/IotHubs"
    },
    {
      "apiVersion": "2016-02-03",
      "dependsOn": [
        "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
      ],
      "name": "[concat(parameters('iotHubName'), '/events/',parameters('tsiConsumerGroupName'))]",
      "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups"
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "name": "[parameters('tsiEnvironmentName')]",
      "apiVersion": "2017-11-15",
      "location": "[parameters('location')]",
      "properties": {
        "dataRetentionTime": "[parameters('tsiEnvironmentDataRetentionTime')]"
      },
      "sku": {
        "name": "[parameters('tsiEnvironmentSkuName')]",
        "capacity": "[parameters('tsiEnvironmentSkuCapacity')]"
      }
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments/eventsources",
      "name": "[concat(parameters('tsiEnvironmentName'), '/', parameters('tsiEventSourceName'))]",
      "apiVersion": "2017-11-15",
      "location": "[parameters('location')]",
      "kind": "Microsoft.IoTHub",
      "properties": {
        "iotHubName": "parameters('iotHubName')",
        "keyName": "parameters('iotHubKeyName')",
        "consumerGroupName": "[parameters('tsiConsumerGroupName')]",
        "timestampPropertyName": "[parameters('tsiEventSourceTimestampPropertyName')]",
        "eventSourceResourceId": "[resourceId('Microsoft.Devices/iothubs/', parameters('iotHubName'))]",
        "sharedAccessKey": "[listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', parameters('iotHubName'), 'iothubowner'), '2016-02-03').primaryKey]"
      },
      "dependsOn": [
        "[concat('Microsoft.TimeSeriesInsights/environments/', parameters('tsiEnvironmentName'))]",
        "[concat('Microsoft.Devices/iothubs/', parameters('iotHubName'))]"
      ]
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
      "name": "[concat(parameters('tsiEnvironmentName'), '/', 'readerAccessPolicy')]",
      "apiVersion": "2017-11-15",
      "properties": {
        "principalObjectId": "[parameters('tsiAccessPolicyReaderObjectId')]",
        "roles": [
          "Reader"
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.TimeSeriesInsights/environments/', parameters('tsiEnvironmentName'))]"
      ]
    }
  ],
  "outputs": {
    "tsiDataAccessFQDN": {
      "value": "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', parameters('tsiEnvironmentName'))).dataAccessFQDN]",
      "type": "string"
    },
    "tsiAccessPolicyReaderObjectId": {
      "value": "[parameters('tsiAccessPolicyReaderObjectId')]",
      "type": "string"
    }
  }
}
